# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Automatic Update
on:
  # Run weekly on Sunday at 00:00 UTC
  schedule:
    - cron: "0 0 * * 0"

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      packages:
        description: "Space-separated list of specific packages to update (empty for all)"
        required: false
        default: ""
      inputs:
        description: "Space-separated list of specific inputs to update (empty for all)"
        required: false
        default: ""
      auto-merge:
        description: "Enable auto-merge for created pull requests"
        type: boolean
        required: false
        default: false

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
      has-updates: ${{ steps.build-matrix.outputs.has-updates }}
    steps:
      - uses: actions/checkout@v5

      - name: Setup Nix
        uses: cachix/install-nix-action@v31

      - name: Build update matrix
        id: build-matrix
        env:
          PACKAGES: "${{ inputs.packages }}"
          INPUTS: "${{ inputs.inputs }}"
        run: |
          # Use the discovery script
          .github/actions/discovery.sh

  update:
    needs: discover
    if: needs.discover.outputs.has-updates == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup Nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ steps.app-token.outputs.token }}

      - name: Set up git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Perform update
        id: update
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          # Use the update script
          if [[ "${{ matrix.type }}" = package ]]; then
            # Only load the devshell to update packages
            nix develop -c .github/actions/update.sh "${{ matrix.type }}" "${{ matrix.name }}"
          else
            .github/actions/update.sh "${{ matrix.type }}" "${{ matrix.name }}"
          fi

      - name: Create pull request
        if: steps.update.outputs.updated == 'true'
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          PR_LABELS: "dependencies,automated,scheduled-update"
          AUTO_MERGE: ${{ inputs.auto-merge }}
        run: |
          .github/actions/create-pr.sh \
            "${{ matrix.type }}" \
            "${{ matrix.name }}" \
            "${{ matrix.current_version }}" \
            "${{ steps.update.outputs.new_version }}"

  summary:
    needs: [discover, update]
    runs-on: ubuntu-latest
    if: always() && needs.discover.outputs.has-updates == 'true'
    steps:
      - name: Generate summary
        run: |-
          echo "## Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Check overall status
          if [ "${{ contains(needs.update.result, 'failure') }}" = "true" ]; then
            echo "⚠️ Some updates failed. Check individual job logs for details." >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ All update jobs completed." >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Configuration:" >> $GITHUB_STEP_SUMMARY
          echo "- Auto-merge: ${{ inputs.auto-merge }}" >> $GITHUB_STEP_SUMMARY
